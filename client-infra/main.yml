#TODO: check ns_ip
---
- name: Ansible create client Infra playbook
  hosts: [localhost]
  user: root
  vars_files:
    - vars/base_config.yml
    - vars/infra_config.yml
    
  tasks:
    - name: install packages
      apt:
        name: "{{ packages }}"
        state: present

    - debug:
        msg: Create VPC here #TODO

    # - name: Create Subnet
    #     #ROLE here
    #   become: yes
    #   loop: "{{ subnets }}"


    # Create the leaf namespace
    - name: Create Leaf gateway {{network_id}}
      namespace:
        name: "{{base_name}}l{{network_id}}"
        state: present
      become: yes
      loop: "{{ subnets }}"

    # Create network and bridge
    - name: Create a network and bridge between namespace and VMs
      script: ./scripts/create_net.sh {{base_name}}n{{network_id}} {{base_name}}n{{network_id}}br
      loop: "{{ subnets }}"

    # Create veth
    - name: Connect bridge to namespace
      script: ./scripts/create_veth_ns_br.sh {{base_name}}l{{network_id}} {{ subnet_cidr }} {{base_name}}n{{network_id}}br {{ cid }}
      loop: "{{ subnets }}"

    # create dnsmasq
    - name: Adding  IP to veth interface on leaf namespace
      command: "ip netns exec {{base_name}}l{{network_id}} ip addr add {{ subnet_cidr }} dev {{base_name}}ve{{network_id}}l"
      ignore_errors: true
      become: yes
      loop: "{{ subnets }}"

    - name: Bringing interface up of veth interface on leaf namespace
      command: "ip netns exec {{base_name}}l{{network_id}} ip link set {{base_name}}ve{{network_id}}l up"
      ignore_errors: true
      become: yes
      loop: "{{ subnets }}"

    - name: Add route on leaf namespace for veth pair
      command: "ip netns exec {{base_name}}l{{network_id}} ip route add {{ subnet_base }}/24 dev {{base_name}}ve{{network_id}}l"
      ignore_errors: true
      become: yes
      loop: "{{ subnets }}"

    - name: Create DHCP server for the leaf gateway
      command: "ip netns exec {{base_name}}l{{network_id}} dnsmasq --interface={{base_name}}ve{{network_id}}l --dhcp-range={{ range }},12h --bind-interfaces --except-interface=lo"
      ignore_errors: true
      become: yes
      loop: "{{ subnets }}"

    # Create VMs
    - name: Clone VMs
      command: "virt-clone --original sampleVM -n {{item.0.base_name}}n{{item.0.network_id}}vm{{item.1.item}} --auto-clone" #need to fix that
      become: yes
      with_subelements: 
        - "{{ subnets }}"
        - vm_ids
    
    - name: Start VMs
      virt:
        name: "{{base_name}}n{{item.0.network_id}}vm{{item.1.item}}"
        state: running
      become: yes
      with_subelements: 
        - "{{ subnets }}"
        - vm_ids

    - name: Attach interface to VMs
      command: "virsh attach-interface --domain {{base_name}}n{{item.0.network_id}}vm{{item.1.item}} --type network {{item.0.base_name}}n{{item.0.network_id}} --model virtio"
      become: yes
      with_subelements: 
        - "{{ subnets }}"
        - vm_ids